41 2 0
38 1
22 8 32 48 12 0 \NUL
Lab 1
22 9 64 91 44 0 \NUL
Davila, Alex
22 8 96 67 76 0 \NUL
hdavilac
22 64 272 264 252 0 \NUL
Part A Output                            
8 216 184 265 135 1 0
8 280 184 329 135 1 0
8 352 184 401 135 1 0
11 168 424 195 326 0 1
20 263 208 322 189 0
in_3
20 336 208 395 189 0
in_2
20 408 208 467 189 0
in_1
8 424 184 473 135 1 0
20 480 208 539 189 0
in_0
19 80 312 139 293 0
a_3
19 64 336 123 317 0
a_2
19 48 360 107 341 0
a_1
19 32 384 91 365 0
a_0
22 24 466 381 446 0 \NUL
This segment LED increases as we count up in binary.
22 24 492 340 472 0 \NUL
This is a hexdecimal counter that goes from 0-F 
22 415 466 714 446 0 \NUL
I sued P.O.S to simplify and design the circuit
7 360 664 409 615 0 1
7 360 704 409 655 0 1
19 272 592 331 573 0
c_2
19 272 632 331 613 0
c_1
19 272 672 331 653 0
c_0
22 416 688 480 668 0 \NUL
SOP/POS
22 416 648 492 628 0 \NUL
NAND Only
22 416 608 484 588 0 \NUL
NOR Only
22 414 494 779 474 0 \NUL
The out put is a series of currents that light up the LEDs
22 91 715 324 695 0 \NUL
The output is based on a truth table
22 91 745 677 725 0 \NUL
All the LEDs should be synchronized as we increment count in binary (by switching on/off)
22 280 32 653 12 0 \NUL
You are only permitted to modify or add text to this page.
22 280 56 605 36 0 \NUL
Your circuit must use senders and/or receivers to
22 280 80 538 60 0 \NUL
interface with these inputs and outputs.
7 472 360 521 311 0 1
7 544 360 593 311 0 1
7 616 360 665 311 0 1
19 416 392 475 373 0
b_2
19 488 392 547 373 0
b_1
19 560 392 619 373 0
b_0
7 360 624 409 575 0 1
22 64 136 616 116 0 \NUL
Input                                                                                                                                 
22 448 272 650 252 0 \NUL
Part B Output                            
22 272 552 473 532 0 \NUL
Part C Output                            
22 24 516 226 496 0 \NUL
as we increase count in binary
1 470 159 481 198
1 409 198 398 159
1 337 198 326 159
1 264 198 262 159
1 169 390 136 302
1 169 396 120 326
1 169 402 104 350
1 169 408 88 374
1 328 622 361 639
1 328 662 361 679
1 472 382 473 335
1 544 382 545 335
1 616 382 617 335
1 328 582 361 599
38 2
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 90 44 0 \NUL
Davila, Alex
22 7 96 66 76 0 \NUL
hdavilac
19 392 168 451 149 0
a0
7 448 496 497 447 0 1
19 424 408 483 389 0
c0
7 496 408 545 359 0 1
7 496 456 545 407 0 1
7 448 376 497 327 0 1
19 424 432 483 413 0
c1
19 424 288 483 269 0
b0
7 496 288 545 239 0 1
7 496 336 545 287 0 1
7 448 256 497 207 0 1
19 424 312 483 293 0
b1
19 344 200 403 181 0
a1
7 400 496 449 447 0 1
19 384 528 443 509 0
d0
19 344 504 403 485 0
d1
7 360 456 409 407 0 1
19 296 456 355 437 0
e1
19 296 424 355 405 0
e0
7 360 408 409 359 0 1
7 400 376 449 327 0 1
7 360 336 409 287 0 1
19 296 288 355 269 0
f1
19 296 248 355 229 0
f0
7 360 288 409 239 0 1
7 400 256 449 207 0 1
19 296 376 355 357 0
g1
19 296 344 355 325 0
g0
7 200 376 249 327 0 1
7 152 376 201 327 0 1
19 136 408 195 389 0
h0
19 96 384 155 365 0
h1
22 279 60 667 40 0 \NUL
Your circuit must use senders to interface with these LEDs.
22 280 32 522 12 0 \NUL
Do not add any circuitry to this page.
1 480 398 497 383
1 480 422 497 431
1 480 278 497 263
1 449 231 448 158
1 480 302 497 311
1 449 471 440 518
1 401 471 400 494
1 352 446 361 431
1 352 414 361 383
1 352 278 361 311
1 352 238 361 263
1 401 231 400 190
1 352 366 449 351
1 352 334 401 351
1 201 351 192 398
1 153 351 152 374
38 3
22 8 32 48 12 0 \NUL
Lab 1
22 8 63 90 43 0 \NUL
Davila, Alex
22 8 95 67 75 0 \NUL
hdavilac
19 322 334 381 315 0
in_3
19 322 358 381 339 0
in_2
19 322 382 381 363 0
in_1
19 321 406 380 387 0
in_0
20 481 334 540 315 0
a_3
20 481 358 540 339 0
a_2
20 481 382 540 363 0
a_1
20 481 406 540 387 0
a_0
22 24 600 390 580 0 \NUL
these are only present so circuit simulates without error
22 24 624 291 604 0 \NUL
remove these once logic is implemented
22 21 182 251 162 0 \NUL
placeholder senders and receivers
20 128 400 187 381 0
e1
20 128 424 187 405 0
e0
20 128 448 187 429 0
f1
20 128 472 187 453 0
f0
20 128 496 187 477 0
g1
20 128 520 187 501 0
g0
20 128 544 187 525 0
h1
20 128 568 187 549 0
h0
20 128 208 187 189 0
a1
20 128 232 187 213 0
a0
20 128 256 187 237 0
b1
20 128 280 187 261 0
b0
20 128 305 187 286 0
c1
20 128 330 187 311 0
c0
20 127 352 186 333 0
d1
20 128 376 187 357 0
d0
22 318 301 710 281 0 \NUL
Part A: Connecting user input switches to 7 segment display
1 482 324 378 324
1 378 348 482 348
1 378 372 482 372
1 377 396 482 396
38 4
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 90 44 0 \NUL
Davila, Alex
22 8 96 67 76 0 \NUL
hdavilac
20 382 444 441 425 0
b_1
20 416 259 475 240 0
b_0
20 528 364 587 345 0
b_2
22 94 140 142 120 0 \NUL
Part B:
3 378 352 427 303 0 0
3 376 408 425 359 0 0
4 448 379 497 330 0 0
5 297 338 346 289 0
5 297 422 346 373 0
19 122 323 181 304 0
in_1
19 122 351 181 332 0
in_0
19 123 379 182 360 0
in_1
19 122 407 181 388 0
in_0
14 114 274 163 225
19 122 444 181 425 0
in_0
22 95 167 709 147 0 \NUL
Design a circuit that outputs the three bits shown in the truth table given the four bits as input. 
22 96 197 614 177 0 \NUL
The three output bits have b_2 as the left-most bit and b_0 as the right-most bit.
1 449 340 424 327
1 449 368 422 383
1 343 313 379 313
1 343 397 377 397
1 178 313 298 313
1 178 341 379 341
1 179 369 377 369
1 178 397 298 397
1 494 354 529 354
1 417 249 160 249
1 178 434 383 434
38 5
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 90 44 0 \NUL
Davila, Alex
22 8 96 67 76 0 \NUL
hdavilac
22 123 112 166 92 0 \NUL
Part C
19 123 644 182 625 0
in_2
19 124 734 183 715 0
in_1
19 159 615 218 596 0
in_0
19 154 238 213 219 0
in_2
19 146 191 205 172 0
in_0
19 149 286 208 267 0
in_1
3 361 220 410 171 0 0
3 356 287 405 238 0 0
4 461 254 510 205 0 0
5 293 234 342 185 0
5 291 301 340 252 0
20 545 238 604 219 0
c_0
22 124 140 503 120 0 \NUL
Implemented the truth table using Sum of Products (SOP). 
22 124 166 484 146 0 \NUL
Output the result on the LED connected to receiver c_0.
22 114 345 465 325 0 \NUL
Implemented the SOP or POS using only NAND gates.
3 518 451 567 402 0 1
3 431 474 480 425 0 1
3 430 431 479 382 0 1
3 283 438 332 389 0 1
3 286 496 335 447 0 1
20 595 436 654 417 0
c_1
19 151 445 210 426 0
in_2
19 161 484 220 465 0
in_1
19 154 402 213 383 0
in_0
22 118 552 449 532 0 \NUL
I built the same SOP or POS using only NOR gates
20 678 662 737 643 0
c_2
4 499 678 548 629 0 1
4 311 631 360 582 0 1
4 407 645 456 596 0 1
4 588 676 637 627 0 1
4 406 735 455 686 0 1
4 317 721 366 672 0 1
22 114 368 474 348 0 \NUL
Output this result to the LED connected to receiver c_1.
1 462 215 407 195
1 462 243 402 262
1 210 228 294 209
1 362 209 339 209
1 210 228 357 248
1 205 276 292 276
1 337 276 357 276
1 202 181 362 181
1 507 229 546 228
1 476 406 519 412
1 477 449 519 440
1 329 413 431 420
1 332 471 432 463
1 564 426 596 426
1 207 435 284 427
1 207 435 284 399
1 210 392 431 392
1 207 435 432 435
1 217 474 287 457
1 287 485 217 474
1 634 651 679 652
1 589 637 545 653
1 589 665 545 653
1 500 639 453 620
1 500 667 452 710
1 408 606 357 606
1 407 696 363 696
1 215 605 312 592
1 215 605 312 620
1 179 634 408 634
1 179 634 318 682
1 180 724 407 724
1 318 710 179 634
38 6
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 98 44 0 \NUL
Slug, Sammy
22 8 96 48 76 0 \NUL
sslug
39 16777215
47 0
40 1 8 8
50 800 800
51 1 30
30
System
20
700
0
0
1
2
2
34
